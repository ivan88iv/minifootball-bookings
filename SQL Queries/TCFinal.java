package com.example.tests;

import com.thoughtworks.selenium.*;
import org.testng.annotations.*;
import static org.testng.Assert.*;
import java.util.regex.Pattern;

public class TCFinal extends SeleneseTestNgHelper {
	@Test public void testTCFinal() throws Exception {
		selenium.open("/SOAClient/faces/login.xhtml");
		selenium.click("link=register");
		selenium.waitForPageToLoad("30000");
		selenium.click("id=j_id73_j_id_2e:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Please supply a user name!"));
		assertTrue(selenium.isTextPresent("Please supply a password!"));
		assertTrue(selenium.isTextPresent("Please supply a confirmaiton password!"));
		assertTrue(selenium.isTextPresent("Please supply a first name!"));
		assertTrue(selenium.isTextPresent("Please supply a last name!"));
		assertTrue(selenium.isTextPresent("Please supply an e-mail!"));
		selenium.type("id=username", "WrongConfirmation");
		selenium.type("id=password", "Secret");
		selenium.type("id=confpassword", "Wrong");
		selenium.type("id=name", "Wrong");
		selenium.type("id=family", "Confirmation");
		selenium.type("id=email", "test@email.com");
		selenium.click("id=j_id73_j_id_2e:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Passwords do not match!"));
		selenium.type("id=username", "WrongEmail");
		selenium.type("id=password", "Secret");
		selenium.type("id=confpassword", "Secret");
		selenium.type("id=name", "Wrong");
		selenium.type("id=family", "Email");
		selenium.type("id=email", "testemail");
		selenium.click("id=j_id73_j_id_2e:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("The provided email address is not in the standard e-mail format. For example tisho_88@abv.bg."));
		selenium.type("id=username", "WrongPhone");
		selenium.type("id=password", "Secret");
		selenium.type("id=confpassword", "Secret");
		selenium.type("id=name", "Wrong");
		selenium.type("id=family", "Phone");
		selenium.type("id=phone", "Wrong");
		selenium.type("id=email", "test@email.com");
		selenium.click("id=j_id73_j_id_2e:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Telephone must be in the form (+digits)digits!"));
		selenium.type("id=username", "UserOne");
		selenium.type("id=password", "Secret");
		selenium.type("id=confpassword", "Secret");
		selenium.type("id=name", "User");
		selenium.type("id=family", "One");
		selenium.type("id=phone", "(+359)888888");
		selenium.type("id=email", "test@email.com");
		selenium.type("id=address", "Sofia");
		selenium.click("id=j_id73_j_id_2e:button");
		selenium.waitForPageToLoad("30000");
		selenium.click("id=j_id27_j_id_u:button");
		selenium.waitForPageToLoad("30000");
		selenium.click("link=register");
		selenium.waitForPageToLoad("30000");
		selenium.type("id=username", "UserOne");
		selenium.type("id=password", "New");
		selenium.type("id=confpassword", "New");
		selenium.type("id=name", "Existing");
		selenium.type("id=family", "User");
		selenium.type("id=email", "existing@email.com");
		selenium.click("id=j_id73_j_id_2e:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("The username already exists!"));
		selenium.click("link=login");
		selenium.waitForPageToLoad("30000");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Please supply a user name!"));
		assertTrue(selenium.isTextPresent("Please supply a password!"));
		selenium.type("id=username", "UserOne");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Please supply a password!"));
		selenium.type("id=username", "");
		selenium.type("id=password", "Secret");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Please supply a user name!"));
		selenium.type("id=username", "UserOne");
		selenium.type("id=password", "123");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Incorrect username or password!"));
		selenium.type("id=username", "UserTwo");
		selenium.type("id=password", "Wrong");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Incorrect username or password!"));
		selenium.type("id=username", "WrongConfirmation");
		selenium.type("id=password", "Wrong");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Incorrect username or password!"));
		selenium.type("id=username", "WrongConfirmation");
		selenium.type("id=password", "Secret");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Incorrect username or password!"));
		selenium.type("id=username", "UserOne");
		selenium.type("id=password", "Secret");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		selenium.open("/SOAClient/faces/login.xhtml");
		selenium.type("id=username", "UserOne");
		selenium.type("id=password", "Secret");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("User is already logged in. Please, log out."));
		selenium.open("/SOAClient/faces/home.xhtml");
		selenium.click("link=logout");
		selenium.waitForPageToLoad("30000");
		selenium.type("id=username", "UserOne");
		selenium.type("id=password", "Secret");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		selenium.click("link=logout");
		selenium.waitForPageToLoad("30000");
		selenium.open("/SOAClient/faces/home.xhtml");
		selenium.click("id=playgroundForm:j_id_1y:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Please select a country from the list!"));
		assertTrue(selenium.isTextPresent("Please select a playground from the list!"));
		assertTrue(selenium.isTextPresent("Please select a city from the list!"));
		selenium.click("id=playgroundForm:country-selectItem0");
		Thread.sleep(2000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "");
		assertEquals(selenium.getText("id=playgroundForm:city-selectItem0"), "Blagoevgrad");
		assertEquals(selenium.getText("id=playgroundForm:city-selectItem1"), "Sofia");
		selenium.click("id=playgroundForm:j_id_1y:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Please select a playground from the list!"));
		assertTrue(selenium.isTextPresent("Please select a city from the list!"));
		selenium.click("id=playgroundForm:city-selectItem1");
		Thread.sleep(2000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "");
		assertEquals(selenium.getText("id=playgroundForm:playground-selectItem0"), "Orlandovsti 1");
		assertEquals(selenium.getText("id=playgroundForm:playground-selectItem1"), "Studentski Grad 1");
		selenium.click("id=playgroundForm:j_id_1y:button");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("Please select a playground from the list!"));
		selenium.click("id=playgroundForm:playground-selectItem1");
		assertEquals(selenium.getValue("id=playgroundForm:address"), "str. St. Kliment Ohridski 2");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "Studentski Grad 1");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "(+359)882277333");
		selenium.click("id=playgroundForm:city-selectItem0");
		Thread.sleep(2000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "");
		assertEquals(selenium.getText("id=playgroundForm:playground-selectItem0"), "MG 1");
		assertEquals(selenium.getText("id=playgroundForm:playground-selectItem1"), "Stroitel 1");
		assertEquals(selenium.getText("id=playgroundForm:playground-selectItem2"), "Strumsko 1");
		assertEquals(selenium.getText("id=playgroundForm:playground-selectItem3"), "Strumsko 2");
		assertEquals(selenium.getText("id=playgroundForm:playground-selectItem4"), "Elenovo 1");
		selenium.click("id=playgroundForm:playground-selectItem1");
		Thread.sleep(2000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "str. Fritiof Nansen 2");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "Stroitel 1");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "(+359)882233221");
		selenium.click("id=playgroundForm:country-selectItem1");
		Thread.sleep(2000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "");
		assertEquals(selenium.getText("id=playgroundForm:city-selectItem0"), "Ohrid");
		selenium.click("id=playgroundForm:city-selectItem0");
		Thread.sleep(2000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "");
		assertEquals(selenium.getText("id=playgroundForm:playground-selectItem0"), "Ohrid 1");
		selenium.click("id=playgroundForm:playground-selectItem0");
		Thread.sleep(1000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "bul. Ohrid 13");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "Ohrid 1");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "(+319)827723233");
		selenium.click("id=playgroundForm:j_id_1y:button");
		selenium.waitForPageToLoad("30000");
		selenium.type("id=username", "UserOne");
		selenium.type("id=password", "Secret");
		selenium.click("id=j_id38_j_id_18:button");
		selenium.waitForPageToLoad("30000");
		Thread.sleep(1000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "bul. Ohrid 13");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "Ohrid 1");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "(+319)827723233");
		selenium.click("id=playgroundForm:country-selectItem0");
		Thread.sleep(1000);
		selenium.click("id=playgroundForm:city-selectItem1");
		Thread.sleep(1000);
		selenium.click("id=playgroundForm:playground-selectItem1");
		Thread.sleep(1000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "str. St. Kliment Ohridski 2");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "Studentski Grad 1");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "(+359)882277333");
		selenium.click("id=playgroundForm:j_id_1y:button");
		selenium.waitForPageToLoad("30000");
		assertEquals(selenium.getValue("id=schedule-form:playgroundId"), "Studentski Grad 1");
		assertEquals(selenium.getValue("id=schedule-form:playgroundCity"), "Sofia");
		assertEquals(selenium.getValue("id=schedule-form:playgroundCountry"), "Bulgaria");
		selenium.click("id=schedule-form:daySelectorPopupButton");
		selenium.click("id=schedule-form:daySelectorDayCell11");
		selenium.waitForPageToLoad("30000");
		selenium.type("id=reserve-form:startTimeInput", "21:30");
		selenium.type("id=reserve-form:endTimeInput", "20:30");
		selenium.click("id=j_id_1x:button");
		Thread.sleep(1000);
		assertTrue(selenium.isTextPresent("The start reservation time must be before the end reservation time."));
		selenium.type("id=reserve-form:startTimeInput", "21:90");
		selenium.type("id=reserve-form:endTimeInput", "22:95");
		selenium.click("id=j_id_1x:button");
		Thread.sleep(1000);
		assertEquals(selenium.getText("css=#reserve-form\\:startTimeInpuMsgtHolder span"), "The value for the time should be in the format 'HH:mm'!");
		assertEquals(selenium.getText("css=#reserve-form\\:endTimeInpuMsgtHolder span"), "The value for the time should be in the format 'HH:mm'!");
		selenium.type("id=reserve-form:startTimeInput", "21:00");
		selenium.type("id=reserve-form:endTimeInput", "21:00");
		selenium.click("id=j_id_1x:button");
		Thread.sleep(1000);
		assertTrue(selenium.isTextPresent("The start reservation time must be before the end reservation time."));
		selenium.type("id=reserve-form:startTimeInput", "");
		selenium.type("id=reserve-form:endTimeInput", "");
		selenium.click("id=j_id_1x:button");
		Thread.sleep(1000);
		assertTrue(selenium.isTextPresent("Please, provide the time you want to reserve the playground from!"));
		assertTrue(selenium.isTextPresent("Please, provide the time you want to reserve the playground to!"));
		selenium.type("id=reserve-form:startTimeInput", "21:00");
		selenium.type("id=reserve-form:endTimeInput", "22:30");
		selenium.click("id=j_id_1x:button");
		Thread.sleep(1000);
		assertEquals(selenium.getValue("id=playgroundForm:address"), "str. St. Kliment Ohridski 2");
		assertEquals(selenium.getValue("id=playgroundForm:name"), "Studentski Grad 1");
		assertEquals(selenium.getValue("id=playgroundForm:phone"), "(+359)882277333");
		selenium.click("id=playgroundForm:j_id_1y:button");
		selenium.waitForPageToLoad("30000");
		selenium.click("id=schedule-form:daySelectorPopupButton");
		selenium.click("id=schedule-form:daySelectorDayCell11");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("21:00"));
		assertTrue(selenium.isTextPresent("22:30"));
		assertTrue(selenium.isTextPresent("UserOne"));
		selenium.type("id=reserve-form:startTimeInput", "22:00");
		selenium.type("id=reserve-form:endTimeInput", "23:00");
		selenium.click("id=j_id_1x:button");
		Thread.sleep(1000);
		assertTrue(selenium.isTextPresent("The selected playground has already been reserved for the specified time interval!"));
		selenium.type("id=reserve-form:startTimeInput", "22:30");
		selenium.type("id=reserve-form:endTimeInput", "23:30");
		selenium.click("id=j_id_1x:button");
		Thread.sleep(2000);
		selenium.click("id=playgroundForm:j_id_1y:button");
		selenium.waitForPageToLoad("30000");
		selenium.click("id=schedule-form:daySelectorPopupButton");
		selenium.click("id=schedule-form:daySelectorDayCell11");
		selenium.waitForPageToLoad("30000");
		assertTrue(selenium.isTextPresent("21:00"));
		assertTrue(selenium.isTextPresent("22:30"));
		assertTrue(selenium.isTextPresent("23:30"));
		assertTrue(selenium.isTextPresent("UserOne"));
		selenium.click("link=logout");
		selenium.waitForPageToLoad("30000");
	}
}
